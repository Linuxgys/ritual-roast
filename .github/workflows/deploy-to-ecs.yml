name: Deploy to AWS ECS

on:
  workflow_run:
    workflows: ["Deploy to ECR"]  # This runs after ECR push
    types:
      - completed

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      ECS_CLUSTER: ritual-roast-cluster
      ECS_SERVICE: ritual-roast-service
      ECS_TASK_DEFINITION: ritual-roast-taskdefination
      ECR_IMAGE: ${{ secrets.ECR_REGISTRY }}/ritual-roast:latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Fetch Latest Task Definition
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json

      - name: Update Task Definition with New Image
        run: |
          jq --arg IMAGE "$ECR_IMAGE" '.containerDefinitions[0].image = $IMAGE' task-definition.json > updated-task-definition.json

      - name: Register New Task Definition
        id: register-task
        run: |
          TASK_ARN=$(aws ecs register-task-definition --cli-input-json file://updated-task-definition.json | jq -r '.taskDefinition.taskDefinitionArn')
          echo "TASK_DEFINITION_ARN=$TASK_ARN" >> $GITHUB_ENV

      - name: Update ECS Service with New Task Definition
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $TASK_DEFINITION_ARN --force-new-deployment
